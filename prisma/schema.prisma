generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("SERVICE_DB_URI")
}

model users {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  email     String @unique
  password  String? // <-- make optional for OAuth
  isAdmin   Boolean @default(false)
  type      String     @default("USER")
  verified  Boolean @default(false)
  isSecure  Boolean @default(true)
  fName     String  @default("User")
  eName     String?
  image     String  @default("user.png")
  designation String?
  region    String?
  branch    String?
  mobileNo  String?
  resetToken String?
  resetTokenExpiry DateTime?
  name          String? 
  emailVerified DateTime?


  // Optional for WebAuthn support

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 

 
  @@unique([provider, providerAccountId])
}
 

 
model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
}
 
// Optional for WebAuthn support
model Authenticator {
  credentialID         String  @id @map("_id")
  userId               String  @db.ObjectId
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?
 

 
  @@unique([userId, credentialID])
}


